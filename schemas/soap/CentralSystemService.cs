//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="urn://Ocpp/Cs/2012/06/", ConfigurationName="CentralSystemService")]
public interface CentralSystemService
{
    
    // CODEGEN: Generating message contract since the wrapper name (authorizeRequest) of message AuthorizeRequest does not match the default value (Authorize)
    [System.ServiceModel.OperationContractAttribute(Action="/Authorize", ReplyAction="/AuthorizeResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    AuthorizeResponse Authorize(AuthorizeRequest request);
    
    // CODEGEN: Generating message contract since the operation has multiple return values.
    [System.ServiceModel.OperationContractAttribute(Action="/bootNotificationRequest", ReplyAction="/bootNotificationResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    BootNotificationResponse BootNotification(BootNotificationRequest request);
    
    // CODEGEN: Generating message contract since the operation has multiple return values.
    [System.ServiceModel.OperationContractAttribute(Action="/DataTransfer", ReplyAction="/DataTransferResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    DataTransferResponse DataTransfer(DataTransferRequest request);
    
    // CODEGEN: Generating message contract since the wrapper name (diagnosticsStatusNotificationRequest) of message DiagnosticsStatusNotificationRequest does not match the default value (DiagnosticsStatusNotification)
    [System.ServiceModel.OperationContractAttribute(Action="/DiagnosticsStatusNotification", ReplyAction="/DiagnosticsStatusNotificationResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    DiagnosticsStatusNotificationResponse DiagnosticsStatusNotification(DiagnosticsStatusNotificationRequest request);
    
    // CODEGEN: Generating message contract since the wrapper name (firmwareStatusNotificationRequest) of message FirmwareStatusNotificationRequest does not match the default value (FirmwareStatusNotification)
    [System.ServiceModel.OperationContractAttribute(Action="/FirmwareStatusNotification", ReplyAction="/FirmwareStatusNotificationResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    FirmwareStatusNotificationResponse FirmwareStatusNotification(FirmwareStatusNotificationRequest request);
    
    // CODEGEN: Generating message contract since the wrapper name (heartbeatRequest) of message HeartbeatRequest does not match the default value (Heartbeat)
    [System.ServiceModel.OperationContractAttribute(Action="/Heartbeat", ReplyAction="/HeartbeatResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    HeartbeatResponse Heartbeat(HeartbeatRequest request);
    
    // CODEGEN: Generating message contract since the wrapper name (meterValuesRequest) of message MeterValuesRequest does not match the default value (MeterValues)
    [System.ServiceModel.OperationContractAttribute(Action="/MeterValues", ReplyAction="/MeterValuesResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    MeterValuesResponse MeterValues(MeterValuesRequest request);
    
    // CODEGEN: Generating message contract since the operation has multiple return values.
    [System.ServiceModel.OperationContractAttribute(Action="/StartTransaction", ReplyAction="/StartTransactionResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    StartTransactionResponse StartTransaction(StartTransactionRequest request);
    
    // CODEGEN: Generating message contract since the wrapper name (statusNotificationRequest) of message StatusNotificationRequest does not match the default value (StatusNotification)
    [System.ServiceModel.OperationContractAttribute(Action="/StatusNotification", ReplyAction="/StatusNotificationResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    StatusNotificationResponse StatusNotification(StatusNotificationRequest request);
    
    // CODEGEN: Generating message contract since the wrapper name (stopTransactionRequest) of message StopTransactionRequest does not match the default value (StopTransaction)
    [System.ServiceModel.OperationContractAttribute(Action="/StopTransaction", ReplyAction="/StopTransactionResponse")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    StopTransactionResponse StopTransaction(StopTransactionRequest request);
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public partial class IdTagInfo
{
    
    private AuthorizationStatus statusField;
    
    private System.DateTime expiryDateField;
    
    private bool expiryDateFieldSpecified;
    
    private string parentIdTagField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public AuthorizationStatus status
    {
        get
        {
            return this.statusField;
        }
        set
        {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public System.DateTime expiryDate
    {
        get
        {
            return this.expiryDateField;
        }
        set
        {
            this.expiryDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool expiryDateSpecified
    {
        get
        {
            return this.expiryDateFieldSpecified;
        }
        set
        {
            this.expiryDateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public string parentIdTag
    {
        get
        {
            return this.parentIdTagField;
        }
        set
        {
            this.parentIdTagField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum AuthorizationStatus
{
    
    /// <remarks/>
    Accepted,
    
    /// <remarks/>
    Blocked,
    
    /// <remarks/>
    Expired,
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    ConcurrentTx,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public partial class SampledValue
{
    
    private string valueField;
    
    private ReadingContext contextField;
    
    private bool contextFieldSpecified;
    
    private ValueFormat formatField;
    
    private bool formatFieldSpecified;
    
    private Measurand measurandField;
    
    private bool measurandFieldSpecified;
    
    private Phase phaseField;
    
    private bool phaseFieldSpecified;
    
    private Location locationField;
    
    private bool locationFieldSpecified;
    
    private UnitOfMeasure unitField;
    
    private bool unitFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public string value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=1)]
    public ReadingContext context
    {
        get
        {
            return this.contextField;
        }
        set
        {
            this.contextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool contextSpecified
    {
        get
        {
            return this.contextFieldSpecified;
        }
        set
        {
            this.contextFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=2)]
    public ValueFormat format
    {
        get
        {
            return this.formatField;
        }
        set
        {
            this.formatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool formatSpecified
    {
        get
        {
            return this.formatFieldSpecified;
        }
        set
        {
            this.formatFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=3)]
    public Measurand measurand
    {
        get
        {
            return this.measurandField;
        }
        set
        {
            this.measurandField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool measurandSpecified
    {
        get
        {
            return this.measurandFieldSpecified;
        }
        set
        {
            this.measurandFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=4)]
    public Phase phase
    {
        get
        {
            return this.phaseField;
        }
        set
        {
            this.phaseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool phaseSpecified
    {
        get
        {
            return this.phaseFieldSpecified;
        }
        set
        {
            this.phaseFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=5)]
    public Location location
    {
        get
        {
            return this.locationField;
        }
        set
        {
            this.locationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool locationSpecified
    {
        get
        {
            return this.locationFieldSpecified;
        }
        set
        {
            this.locationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=6)]
    public UnitOfMeasure unit
    {
        get
        {
            return this.unitField;
        }
        set
        {
            this.unitField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool unitSpecified
    {
        get
        {
            return this.unitFieldSpecified;
        }
        set
        {
            this.unitFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum ReadingContext
{
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Interruption.Begin")]
    InterruptionBegin,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Interruption.End")]
    InterruptionEnd,
    
    /// <remarks/>
    Other,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Sample.Clock")]
    SampleClock,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Sample.Periodic")]
    SamplePeriodic,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Transaction.Begin")]
    TransactionBegin,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Transaction.End")]
    TransactionEnd,
    
    /// <remarks/>
    Trigger,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum ValueFormat
{
    
    /// <remarks/>
    Raw,
    
    /// <remarks/>
    SignedData,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum Measurand
{
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Current.Export")]
    CurrentExport,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Current.Import")]
    CurrentImport,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Current.Offered")]
    CurrentOffered,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Energy.Active.Export.Register")]
    EnergyActiveExportRegister,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Energy.Active.Import.Register")]
    EnergyActiveImportRegister,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Energy.Reactive.Export.Register")]
    EnergyReactiveExportRegister,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Energy.Reactive.Import.Register")]
    EnergyReactiveImportRegister,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Energy.Active.Export.Interval")]
    EnergyActiveExportInterval,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Energy.Active.Import.Interval")]
    EnergyActiveImportInterval,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Energy.Reactive.Export.Interval")]
    EnergyReactiveExportInterval,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Energy.Reactive.Import.Interval")]
    EnergyReactiveImportInterval,
    
    /// <remarks/>
    Frequency,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Power.Active.Export")]
    PowerActiveExport,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Power.Active.Import")]
    PowerActiveImport,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Power.Factor")]
    PowerFactor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Power.Offered")]
    PowerOffered,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Power.Reactive.Export")]
    PowerReactiveExport,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Power.Reactive.Import")]
    PowerReactiveImport,
    
    /// <remarks/>
    RPM,
    
    /// <remarks/>
    SoC,
    
    /// <remarks/>
    Temperature,
    
    /// <remarks/>
    Voltage,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum Phase
{
    
    /// <remarks/>
    L1,
    
    /// <remarks/>
    L2,
    
    /// <remarks/>
    L3,
    
    /// <remarks/>
    N,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L1-N")]
    L1N,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L2-N")]
    L2N,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L3-N")]
    L3N,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L1-L2")]
    L1L2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L2-L3")]
    L2L3,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L3-L1")]
    L3L1,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum Location
{
    
    /// <remarks/>
    Body,
    
    /// <remarks/>
    Cable,
    
    /// <remarks/>
    EV,
    
    /// <remarks/>
    Inlet,
    
    /// <remarks/>
    Outlet,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum UnitOfMeasure
{
    
    /// <remarks/>
    Celsius,
    
    /// <remarks/>
    Fahrenheit,
    
    /// <remarks/>
    Wh,
    
    /// <remarks/>
    kWh,
    
    /// <remarks/>
    varh,
    
    /// <remarks/>
    kvarh,
    
    /// <remarks/>
    W,
    
    /// <remarks/>
    kW,
    
    /// <remarks/>
    VA,
    
    /// <remarks/>
    kVA,
    
    /// <remarks/>
    var,
    
    /// <remarks/>
    kvar,
    
    /// <remarks/>
    A,
    
    /// <remarks/>
    V,
    
    /// <remarks/>
    K,
    
    /// <remarks/>
    Percent,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public partial class MeterValue
{
    
    private System.DateTime timestampField;
    
    private SampledValue[] sampledValueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Order=0)]
    public System.DateTime timestamp
    {
        get
        {
            return this.timestampField;
        }
        set
        {
            this.timestampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("sampledValue", Order=1)]
    public SampledValue[] sampledValue
    {
        get
        {
            return this.sampledValueField;
        }
        set
        {
            this.sampledValueField = value;
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="authorizeRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class AuthorizeRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public string idTag;
    
    public AuthorizeRequest()
    {
    }
    
    public AuthorizeRequest(string chargeBoxIdentity, string idTag)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.idTag = idTag;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="authorizeResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class AuthorizeResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public IdTagInfo idTagInfo;
    
    public AuthorizeResponse()
    {
    }
    
    public AuthorizeResponse(IdTagInfo idTagInfo)
    {
        this.idTagInfo = idTagInfo;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum RegistrationStatus
{
    
    /// <remarks/>
    Accepted,
    
    /// <remarks/>
    Pending,
    
    /// <remarks/>
    Rejected,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="bootNotificationRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class BootNotificationRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public string chargePointVendor;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public string chargePointModel;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=2)]
    public string chargePointSerialNumber;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=3)]
    public string chargeBoxSerialNumber;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=4)]
    public string firmwareVersion;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=5)]
    public string iccid;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=6)]
    public string imsi;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=7)]
    public string meterType;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=8)]
    public string meterSerialNumber;
    
    public BootNotificationRequest()
    {
    }
    
    public BootNotificationRequest(string chargeBoxIdentity, string chargePointVendor, string chargePointModel, string chargePointSerialNumber, string chargeBoxSerialNumber, string firmwareVersion, string iccid, string imsi, string meterType, string meterSerialNumber)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.chargePointVendor = chargePointVendor;
        this.chargePointModel = chargePointModel;
        this.chargePointSerialNumber = chargePointSerialNumber;
        this.chargeBoxSerialNumber = chargeBoxSerialNumber;
        this.firmwareVersion = firmwareVersion;
        this.iccid = iccid;
        this.imsi = imsi;
        this.meterType = meterType;
        this.meterSerialNumber = meterSerialNumber;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="bootNotificationResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class BootNotificationResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public RegistrationStatus status;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public System.DateTime currentTime;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=2)]
    public int interval;
    
    public BootNotificationResponse()
    {
    }
    
    public BootNotificationResponse(RegistrationStatus status, System.DateTime currentTime, int interval)
    {
        this.status = status;
        this.currentTime = currentTime;
        this.interval = interval;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum DataTransferStatus
{
    
    /// <remarks/>
    Accepted,
    
    /// <remarks/>
    Rejected,
    
    /// <remarks/>
    UnknownMessageId,
    
    /// <remarks/>
    UnknownVendorId,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="dataTransferRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class DataTransferRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public string vendorId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public string messageId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=2)]
    public string data;
    
    public DataTransferRequest()
    {
    }
    
    public DataTransferRequest(string chargeBoxIdentity, string vendorId, string messageId, string data)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.vendorId = vendorId;
        this.messageId = messageId;
        this.data = data;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="dataTransferResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class DataTransferResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public DataTransferStatus status;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public string data;
    
    public DataTransferResponse()
    {
    }
    
    public DataTransferResponse(DataTransferStatus status, string data)
    {
        this.status = status;
        this.data = data;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum DiagnosticsStatus
{
    
    /// <remarks/>
    Idle,
    
    /// <remarks/>
    Uploaded,
    
    /// <remarks/>
    UploadFailed,
    
    /// <remarks/>
    Uploading,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="diagnosticsStatusNotificationRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class DiagnosticsStatusNotificationRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public DiagnosticsStatus status;
    
    public DiagnosticsStatusNotificationRequest()
    {
    }
    
    public DiagnosticsStatusNotificationRequest(string chargeBoxIdentity, DiagnosticsStatus status)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.status = status;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="diagnosticsStatusNotificationResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class DiagnosticsStatusNotificationResponse
{
    
    public DiagnosticsStatusNotificationResponse()
    {
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum FirmwareStatus
{
    
    /// <remarks/>
    Downloaded,
    
    /// <remarks/>
    DownloadFailed,
    
    /// <remarks/>
    Downloading,
    
    /// <remarks/>
    Idle,
    
    /// <remarks/>
    InstallationFailed,
    
    /// <remarks/>
    Installed,
    
    /// <remarks/>
    Installing,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="firmwareStatusNotificationRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class FirmwareStatusNotificationRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public FirmwareStatus status;
    
    public FirmwareStatusNotificationRequest()
    {
    }
    
    public FirmwareStatusNotificationRequest(string chargeBoxIdentity, FirmwareStatus status)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.status = status;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="firmwareStatusNotificationResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class FirmwareStatusNotificationResponse
{
    
    public FirmwareStatusNotificationResponse()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="heartbeatRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class HeartbeatRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    public HeartbeatRequest()
    {
    }
    
    public HeartbeatRequest(string chargeBoxIdentity)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="heartbeatResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class HeartbeatResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public System.DateTime currentTime;
    
    public HeartbeatResponse()
    {
    }
    
    public HeartbeatResponse(System.DateTime currentTime)
    {
        this.currentTime = currentTime;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="meterValuesRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class MeterValuesRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public int connectorId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public int transactionId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=2)]
    [System.Xml.Serialization.XmlElementAttribute("meterValue")]
    public MeterValue[] meterValue;
    
    public MeterValuesRequest()
    {
    }
    
    public MeterValuesRequest(string chargeBoxIdentity, int connectorId, int transactionId, MeterValue[] meterValue)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.connectorId = connectorId;
        this.transactionId = transactionId;
        this.meterValue = meterValue;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="meterValuesResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class MeterValuesResponse
{
    
    public MeterValuesResponse()
    {
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="startTransactionRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class StartTransactionRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public int connectorId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public string idTag;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=2)]
    public System.DateTime timestamp;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=3)]
    public int meterStart;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=4)]
    public int reservationId;
    
    public StartTransactionRequest()
    {
    }
    
    public StartTransactionRequest(string chargeBoxIdentity, int connectorId, string idTag, System.DateTime timestamp, int meterStart, int reservationId)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.connectorId = connectorId;
        this.idTag = idTag;
        this.timestamp = timestamp;
        this.meterStart = meterStart;
        this.reservationId = reservationId;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="startTransactionResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class StartTransactionResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public int transactionId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public IdTagInfo idTagInfo;
    
    public StartTransactionResponse()
    {
    }
    
    public StartTransactionResponse(int transactionId, IdTagInfo idTagInfo)
    {
        this.transactionId = transactionId;
        this.idTagInfo = idTagInfo;
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum ChargePointStatus
{
    
    /// <remarks/>
    Available,
    
    /// <remarks/>
    Preparing,
    
    /// <remarks/>
    Charging,
    
    /// <remarks/>
    SuspendedEV,
    
    /// <remarks/>
    SuspendedEVSE,
    
    /// <remarks/>
    Finishing,
    
    /// <remarks/>
    Reserved,
    
    /// <remarks/>
    Faulted,
    
    /// <remarks/>
    Unavailable,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum ChargePointErrorCode
{
    
    /// <remarks/>
    ConnectorLockFailure,
    
    /// <remarks/>
    EVCommunicationError,
    
    /// <remarks/>
    GroundFailure,
    
    /// <remarks/>
    HighTemperature,
    
    /// <remarks/>
    InternalError,
    
    /// <remarks/>
    LocalListConflict,
    
    /// <remarks/>
    NoError,
    
    /// <remarks/>
    OtherError,
    
    /// <remarks/>
    OverCurrentFailure,
    
    /// <remarks/>
    OverVoltage,
    
    /// <remarks/>
    PowerMeterFailure,
    
    /// <remarks/>
    PowerSwitchFailure,
    
    /// <remarks/>
    ReaderFailure,
    
    /// <remarks/>
    ResetFailure,
    
    /// <remarks/>
    UnderVoltage,
    
    /// <remarks/>
    WeakSignal,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="statusNotificationRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class StatusNotificationRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public int connectorId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public ChargePointStatus status;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=2)]
    public ChargePointErrorCode errorCode;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=3)]
    public string info;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=4)]
    public System.DateTime timestamp;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=5)]
    public string vendorId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=6)]
    public string vendorErrorCode;
    
    public StatusNotificationRequest()
    {
    }
    
    public StatusNotificationRequest(string chargeBoxIdentity, int connectorId, ChargePointStatus status, ChargePointErrorCode errorCode, string info, System.DateTime timestamp, string vendorId, string vendorErrorCode)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.connectorId = connectorId;
        this.status = status;
        this.errorCode = errorCode;
        this.info = info;
        this.timestamp = timestamp;
        this.vendorId = vendorId;
        this.vendorErrorCode = vendorErrorCode;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="statusNotificationResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class StatusNotificationResponse
{
    
    public StatusNotificationResponse()
    {
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
public enum Reason
{
    
    /// <remarks/>
    EmergencyStop,
    
    /// <remarks/>
    EVDisconnected,
    
    /// <remarks/>
    HardReset,
    
    /// <remarks/>
    Local,
    
    /// <remarks/>
    Other,
    
    /// <remarks/>
    PowerLoss,
    
    /// <remarks/>
    Reboot,
    
    /// <remarks/>
    Remote,
    
    /// <remarks/>
    SoftReset,
    
    /// <remarks/>
    UnlockCommand,
    
    /// <remarks/>
    DeAuthorized,
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="stopTransactionRequest", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class StopTransactionRequest
{
    
    [System.ServiceModel.MessageHeaderAttribute(Namespace="urn://Ocpp/Cs/2012/06/")]
    public string chargeBoxIdentity;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public int transactionId;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=1)]
    public string idTag;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=2)]
    public System.DateTime timestamp;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=3)]
    public int meterStop;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=4)]
    public Reason reason;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=5)]
    [System.Xml.Serialization.XmlElementAttribute("transactionData")]
    public MeterValue[] transactionData;
    
    public StopTransactionRequest()
    {
    }
    
    public StopTransactionRequest(string chargeBoxIdentity, int transactionId, string idTag, System.DateTime timestamp, int meterStop, Reason reason, MeterValue[] transactionData)
    {
        this.chargeBoxIdentity = chargeBoxIdentity;
        this.transactionId = transactionId;
        this.idTag = idTag;
        this.timestamp = timestamp;
        this.meterStop = meterStop;
        this.reason = reason;
        this.transactionData = transactionData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName="stopTransactionResponse", WrapperNamespace="urn://Ocpp/Cs/2012/06/", IsWrapped=true)]
public partial class StopTransactionResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn://Ocpp/Cs/2012/06/", Order=0)]
    public IdTagInfo idTagInfo;
    
    public StopTransactionResponse()
    {
    }
    
    public StopTransactionResponse(IdTagInfo idTagInfo)
    {
        this.idTagInfo = idTagInfo;
    }
}
